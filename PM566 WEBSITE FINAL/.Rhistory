# Install and load DT
library(DT)
# Create an interactive table
datatable(clean_mentalhealth_data,
options = list(pageLength = 10, autoWidth = TRUE),
caption = "Interactive Data Table for Cleaned Data")
# Read the CSV file into a data frame
data <- read.csv("/Users/erinyu/Desktop/USC/MPH/Fall 2024/Health Data (PM 566)/Alzheimer_s_Disease_and_Healthy_Aging_Data.csv")
# Create a subset of the data where Class is "Mental Health"
mental_health_data <- subset(data, Class == "Mental Health")
# Remove rows with NA in Data_Value
clean_mentalhealth_data <- data[!is.na(data$Data_Value), ]
# Install and load DT
library(DT)
# Create an interactive table
datatable(clean_mentalhealth_data,
options = list(pageLength = 10, autoWidth = TRUE),
caption = "Interactive Data Table for Cleaned Data")
# Install and load DT
library(DT)
# Create an interactive table
datatable(clean_mentalhealth_data,
options = list(pageLength = 10, autoWidth = TRUE),
caption = "Interactive Data Table for Cleaned Data")
# Create a subset of the data where Class is "Mental Health"
# Create a subset of the data where Class is "Mental Health"
mental_health_data <- subset(data, Class == "Mental Health")
# Remove rows with NA in Data_Value
clean_mentalhealth_data <- mental_health_data[!is.na(mental_health_data$Data_Value), ]
# Load DT library
library(DT)
# Create an interactive table
datatable(clean_mentalhealth_data,
options = list(pageLength = 10, autoWidth = TRUE),
caption = "Interactive Data Table for Cleaned Data")
View(data)
# Load necessary libraries
library(dplyr)
library(DT)
# Summarize the data: Calculate mean Data_Value by LocationDesc
summarized_data <- clean_mentalhealth_data %>%
group_by(LocationDesc) %>%
summarize(
Mean_Data_Value = mean(Data_Value, na.rm = TRUE)
)
# Create an interactive data table with summarized data
datatable(summarized_data,
options = list(pageLength = 10, autoWidth = TRUE),
caption = "Mean Data Value (Percentage) by Location")
# Load necessary libraries
library(dplyr)
library(DT)
# Filter for "Frequent mental distress" under Topic and calculate the mean percentage
summarized_data <- clean_mentalhealth_data %>%
filter(Topic == "Frequent mental distress") %>%
group_by(LocationDesc) %>%
summarize(
`Mean percentage` = mean(Data_Value, na.rm = TRUE)
) %>%
rename(State = LocationDesc)  # Rename column header to "State"
# Create an interactive table with a custom title
datatable(
summarized_data,
options = list(
pageLength = 10,  # Show 10 rows per page
autoWidth = TRUE  # Adjust column widths
),
caption = htmltools::tags$caption(
style = "caption-side: top; text-align: center; font-size: 16px; font-weight: bold;",
"Mean Percentage Reporting Frequent Mental Distress"
)
)
install.packages("leaflet")
install.packages("dplyr")
install.packages("tigris")
install.packages("sf")
install.packages("dplyr")
install.packages("leaflet")
install.packages("leaflet")
library(leaflet)
library(dplyr)
library(tigris)
library(sf)
# Filter and calculate mean percentages
summarized_data <- clean_mentalhealth_data %>%
filter(Topic == "Frequent mental distress") %>%
group_by(LocationDesc) %>%
summarize(Mean_Percentage = mean(Data_Value, na.rm = TRUE)) %>%
rename(State = LocationDesc)  # Rename for easier matching
# Load state boundaries (simplified for efficiency)
states <- tigris::states(cb = TRUE, class = "sf")
# Ensure state names match by converting to uppercase
summarized_data <- summarized_data %>%
mutate(State = toupper(State))
# Join state shapefile with summarized data
states_data <- states %>%
mutate(NAME = toupper(NAME)) %>%  # Ensure NAME matches State
left_join(summarized_data, by = c("NAME" = "State"))
library(leaflet)
library(dplyr)
library(tigris)
library(sf)
options(tigris_use_cache = TRUE)
# Filter and calculate mean percentages
summarized_data <- clean_mentalhealth_data %>%
filter(Topic == "Frequent mental distress") %>%
group_by(LocationDesc) %>%
summarize(Mean_Percentage = mean(Data_Value, na.rm = TRUE)) %>%
rename(State = LocationDesc)  # Rename for easier matching
# Load state boundaries (simplified for efficiency)
states <- tigris::states(cb = TRUE, class = "sf")
# Ensure state names match by converting to uppercase
summarized_data <- summarized_data %>%
mutate(State = toupper(State))
# Join state shapefile with summarized data
states_data <- states %>%
mutate(NAME = toupper(NAME)) %>%  # Ensure NAME matches State
left_join(summarized_data, by = c("NAME" = "State"))
# Define color palette
pal <- colorNumeric(palette = "Blues", domain = states_data$Mean_Percentage, na.color = "transparent")
# Create the leaflet map
leaflet(states_data) %>%
addTiles() %>%
addPolygons(
fillColor = ~pal(Mean_Percentage),  # Fill color based on Mean_Percentage
weight = 1,                        # Border weight
color = "white",                   # Border color
fillOpacity = 0.7,                 # Adjust opacity
popup = ~paste0("State: ", NAME, "<br>Mean Percentage: ", round(Mean_Percentage, 2), "%")
) %>%
addLegend(
position = "bottomright",
pal = pal,
values = ~Mean_Percentage,
title = "Mean Percentage (%)"
)
# Load necessary libraries
library(dplyr)
library(knitr)
# Filter the data
mental_distress_table <- data %>%
filter(Topic == "Frequent mental distress" & !is.na(Data_Value)) %>%
select(LocationDesc, Data_Value) %>%
group_by(LocationDesc) %>%
summarise(Mean_Percentage = mean(Data_Value, na.rm = TRUE)) %>%
arrange(desc(Mean_Percentage))
# Print a publication-ready table
mental_distress_table %>%
kable(
caption = "Frequent Mental Distress by Location",
col.names = c("Location", "Mean Percentage"),
format = "markdown" # Change to "latex" or "html" for other outputs
)
# Load necessary libraries
library(dplyr)
library(knitr)
# Filter the data
mental_distress_table <- data %>%
filter(Topic == "Frequent mental distress" & !is.na(Data_Value)) %>%
select(LocationDesc, Data_Value) %>%
group_by(LocationDesc) %>%
summarise(Mean_Percentage = mean(Data_Value, na.rm = TRUE)) %>%
arrange(desc(Mean_Percentage))
# Print a publication-ready table
mental_distress_table %>%
kable(
caption = "Frequent Mental Distress by State",
col.names = c("Location", "Mean Percentage"),
format = "markdown" # Change to "latex" or "html" for other outputs
)
# Load necessary libraries
library(dplyr)
library(knitr)
# Filter the data
mental_distress_table <- data %>%
filter(Topic == "Frequent mental distress" & !is.na(Data_Value)) %>%
select(LocationDesc, Data_Value) %>%
group_by(LocationDesc) %>%
summarise(Mean_Percentage = mean(Data_Value, na.rm = TRUE)) %>%
arrange(desc(Mean_Percentage))
# Print a publication-ready table
mental_distress_table %>%
kable(
caption = "Frequency of Mental Distress by State",
col.names = c("State", "Mean Percentage"),
format = "markdown" # Change to "latex" or "html" for other outputs
)
unique(clean_mentalhealth_data$Topic)
# Load necessary libraries
library(dplyr)
library(DT)
# Filter for "Lifetime diagnosis of depression" under Topic and calculate the mean percentage
summarized_depression_data <- clean_mentalhealth_data %>%
filter(Topic == "Lifetime diagnosis of depression") %>%
group_by(LocationDesc) %>%
summarize(
`Mean percentage` = mean(Data_Value, na.rm = TRUE)
) %>%
rename(State = LocationDesc)  # Rename column header to "State"
# Create an interactive table with a custom title
datatable(
summarized_depression_data,
options = list(
pageLength = 10,  # Show 10 rows per page
autoWidth = TRUE  # Adjust column widths
),
caption = htmltools::tags$caption(
style = "caption-side: top; text-align: center; font-size: 16px; font-weight: bold;",
"Mean Percentage Reporting Lifetime Diagnosis of Depression"
)
)
# Filter the data for "Lifetime diagnosis of depression"
depression_table <- data %>%
filter(Topic == "Lifetime diagnosis of depression" & !is.na(Data_Value)) %>%
select(LocationDesc, Data_Value) %>%
group_by(LocationDesc) %>%
summarise(Mean_Percentage = mean(Data_Value, na.rm = TRUE)) %>%
arrange(desc(Mean_Percentage))
# Print a publication-ready table
depression_table %>%
kable(
caption = "Lifetime Diagnosis of Depression by State",
col.names = c("State", "Mean Percentage"),
format = "markdown" # Change to "latex" or "html" for other outputs
)
# Load ggplot2
library(ggplot2)
# Filter and summarize the data for "Lifetime diagnosis of depression"
depression_summary <- data %>%
filter(Topic == "Lifetime diagnosis of depression" & !is.na(Data_Value)) %>%
group_by(LocationDesc) %>%
summarise(Mean_Percentage = mean(Data_Value, na.rm = TRUE)) %>%
arrange(desc(Mean_Percentage))
# Create a publication-ready bar chart
ggplot(depression_summary, aes(x = reorder(LocationDesc, Mean_Percentage), y = Mean_Percentage)) +
geom_bar(stat = "identity", fill = "steelblue", color = "black", width = 0.8) +  # Add bar border
coord_flip() +  # Flip coordinates for horizontal bars
labs(
title = "Lifetime Diagnosis of Depression by State",
subtitle = "Mean Percentage of Individuals Diagnosed",
x = "State",
y = "Mean Percentage (%)"
) +
theme_minimal(base_size = 14) +  # Use minimal theme with larger text size
theme(
plot.title = element_text(face = "bold", hjust = 0.5, size = 16),  # Center and bold title
plot.subtitle = element_text(hjust = 0.5, size = 12),  # Center subtitle
axis.text.y = element_text(size = 12),  # Increase size of y-axis labels (state names)
axis.text.x = element_text(size = 12),  # Increase size of x-axis labels
axis.title.x = element_text(size = 14, face = "bold"),  # Style x-axis title
axis.title.y = element_text(size = 14, face = "bold"),  # Style y-axis title
panel.grid.major.y = element_blank(),  # Remove horizontal grid lines for clarity
panel.grid.minor = element_blank()  # Remove minor grid lines
)
# Load ggplot2
library(ggplot2)
# Filter and summarize the data for "Lifetime diagnosis of depression"
depression_summary <- data %>%
filter(Topic == "Lifetime diagnosis of depression" & !is.na(Data_Value)) %>%
group_by(LocationDesc) %>%
summarise(Mean_Percentage = mean(Data_Value, na.rm = TRUE)) %>%
arrange(desc(Mean_Percentage))
# Create a publication-ready bar chart
ggplot(depression_summary, aes(x = reorder(LocationDesc, Mean_Percentage), y = Mean_Percentage)) +
geom_bar(stat = "identity", fill = "steelblue", color = "black", width = 0.6) +  # Narrower bars
coord_flip() +  # Flip coordinates for horizontal bars
scale_y_continuous(expand = c(0, 0)) +  # Remove extra white space on y-axis
labs(
title = "Lifetime Diagnosis of Depression by State",
subtitle = "Mean Percentage of Individuals Diagnosed",
x = "State",
y = "Mean Percentage (%)"
) +
theme_minimal(base_size = 14) +  # Use minimal theme with larger text size
theme(
plot.title = element_text(face = "bold", hjust = 0.5, size = 16),  # Center and bold title
plot.subtitle = element_text(hjust = 0.5, size = 12),  # Center subtitle
axis.text.y = element_text(size = 10, margin = margin(r = 10)),  # Add spacing to y-axis labels
axis.text.x = element_text(size = 12),  # Increase size of x-axis labels
axis.title.x = element_text(size = 14, face = "bold"),  # Style x-axis title
axis.title.y = element_text(size = 14, face = "bold"),  # Style y-axis title
panel.grid.major.y = element_blank(),  # Remove horizontal grid lines for clarity
panel.grid.minor = element_blank()  # Remove minor grid lines
)
install.packages("tinytex")
tinytex::install_tinytex()
install.packages("tinytex")
tinytex::install_tinytex()
quarto::quarto_render("your-document.qmd", output_format = "pdf")
install.packages("quarto")
quarto::quarto_render("your-document.qmd", output_format = "pdf")
# Filter the data for "Lifetime diagnosis of depression"
depression_table <- data %>%
filter(Topic == "Lifetime diagnosis of depression" & !is.na(Data_Value)) %>%
select(LocationDesc, Data_Value) %>%
group_by(LocationDesc) %>%
summarise(Mean_Percentage = mean(Data_Value, na.rm = TRUE)) %>%
arrange(desc(Mean_Percentage))
library(dplyr)
library(ggplot2)
# Add quartile grouping
depression_summary <- depression_summary %>%
mutate(Quartile = ntile(Mean_Percentage, 4))  # Divide into quartiles
# Create a bar chart with quartile coloring
ggplot(depression_summary, aes(x = reorder(LocationDesc, Mean_Percentage), y = Mean_Percentage, fill = factor(Quartile))) +
geom_bar(stat = "identity", color = "black", width = 0.6) +
coord_flip() +
scale_fill_brewer(palette = "Blues", name = "Quartile") +  # Add color palette
labs(
title = "Lifetime Diagnosis of Depression by State",
subtitle = "Grouped by Quartiles of Mean Percentage Diagnosed",
x = "State",
y = "Mean Percentage (%)"
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5, size = 16),
plot.subtitle = element_text(hjust = 0.5, size = 12),
axis.text.y = element_text(size = 10, margin = margin(r = 10)),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 14, face = "bold"),
axis.title.y = element_text(size = 14, face = "bold"),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank()
)
